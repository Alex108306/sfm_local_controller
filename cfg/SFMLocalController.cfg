#!/usr/bin/env python

PACKAGE = 'sfm_local_controller'

from math import pi

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()


gen.add("max_lin_acc", double_t, 0, "The translational acceleration limit of the robot", 1.0, 0, 20.0)
gen.add("max_rot_acc", double_t, 0, "The rotational acceleration limit of the robot", 1.0, 0, 20.0)
gen.add("max_lin_vel", double_t, 0, "The maximum translation velocity for the robot in m/s", 0.6, 0, 10.0)
gen.add("min_lin_vel", double_t, 0, "The minimum translation velocity for the robot in m/s", 0.1, 0, 10.0)
gen.add("max_rot_vel", double_t, 0, "The absolute value of the maximum rotational velocity for the robot in rad/s",  0.8, 0, 20.0)
gen.add("min_rot_vel", double_t, 0, "The absolute value of the minimum rotational velocity for the robot in rad/s",  0.3, 0, 20.0)
#gen.add("min_in_place_rot_vel", double_t, 0, "The absolute value of the minimum in-place rotational velocity the controller will explore", 0.5, 0, 20.0)

# sfm weights
gen.add("sfm_goal_weight", double_t, 0, "Weight for the attraction force to the goal", 5.0, 0, 100.0)
gen.add("sfm_obstacle_weight", double_t, 0, "Weight for the repulsion force to obstacles", 15.0, 0, 100.0)
gen.add("sfm_people_weight", double_t, 0, "Weight for the repulsion force to people", 12.0, 0, 100.0)


exit(gen.generate(PACKAGE, "sfm_local_controller", "SFMLocalController"))
